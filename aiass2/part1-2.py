import numpy as np

"""question 2"""

# version 1 of matrix, which didn't take gamma into account
# A = np.array([
# 	[0.2, 0.0, 0.0, 0.0, -0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
# 	[-0.7, 0.7, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
# 	[0.0, -0.7, 0.9, 0.0, 0.0, -0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
# 	[0.0, 0.0, -0.7, 0.9, 0.0, 0.0, -0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
# 	[-0.1, 0.0, 0.0, 0.0, 0.3, 0.0, 0.0, -0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
# 	[0.0, 0.0, -0.1, 0.0, 0.0, 0.3, 0.0, 0.0, 0.0, -0.2, 0.0, 0.0, 0.0, 0.0],
# 	[0.0, 0.0, 0.0, -0.1, 0.0, -0.7, 0.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
# 	[0.0, 0.0, 0.0, 0.0, 0.0, -0.1, 0.0, 0.3, 0.0, 0.0, -0.2, 0.0, 0.0, 0.0],
# 	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.7, 0.9, 0.0, 0.0, -0.2, 0.0, 0.0],
# 	[0.0, 0.0, 0.0, 0.0, 0.0, -0.1, 0.0, 0.0, -0.7, 1.0, 0.0, 0.0, -0.2, 0.0],
# 	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
# 	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0],
# 	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.1, 0.0, -0.7, 0.8, 0.0],
# 	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.7, 0.7]
# 			])

# version 2 of matrix, with gamma:
A = np.array([
	[0.28, 0.0, 0.0, 0.0, -0.18, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
	[-0.63, 0.73, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
	[0.0, -0.63, 0.91, 0.0, 0.0, -0.18, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
	[0.0, 0.0, -0.63, 0.91, 0.0, 0.0, -0.18, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
	[-0.09, 0.0, 0.0, 0.0, 0.37, 0.0, 0.0, -0.18, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
	[0.0, 0.0, -0.09, 0.0, 0.0, 0.37, 0.0, 0.0, 0.0, -0.18, 0.0, 0.0, 0.0, 0.0],
	[0.0, 0.0, 0.0, -0.09, 0.0, -0.7, 0.82, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],
	[0.0, 0.0, 0.0, 0.0, 0.0, -0.09, 0.0, 0.37, 0.0, 0.0, -0.18, 0.0, 0.0, 0.0],
	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.63, 0.91, 0.0, 0.0, -0.18, 0.0, 0.0],
	[0.0, 0.0, 0.0, 0.0, 0.0, -0.09, 0.0, 0.0, -0.63, 1.0, 0.0, 0.0, -0.18, 0.0],
	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0],
	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0],
	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.09, 0.0, -0.63, 0.82, 0.0],
	[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.63, 0.73]
			])

b1 = np.array([-0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, 1.0, -1.0, -0.2, -0.2])
b2 = np.array([-0.4, -0.4, -0.4, -0.4, -0.4, -0.4, -0.4, -0.4, -0.4, -0.4, 1.0, -1.0, -0.4, -0.4])

u1 = np.linalg.solve(A,b1)
u2 = np.linalg.solve(A,b2)

print "utilites for r = -0.2:"
locations = {0:(1,1), 1:(1,2), 2:(1,3), 3:(1,4), 4:(2,1), 5:(2,3), 6:(2,4), 7:(3,1), 8:(3,2), 9:(3,3), 10:(4,1), 11:(4,2), 12:(4,3), 13:(4,4)}
i = 0
for i in range(len(u1)):
	print "%r: %r" % (locations[i], u1[i])
	i += 1
print "check by computing A dot u:"
print np.dot(A, u1)

print ""
print "utilites for r = -0.4:"
i = 0
for i in range(len(u2)):
	print "%r: %r" % (locations[i], u2[i])
	i += 1
print "check by computing A dot u:"
print np.dot(A, u2)

x =u1[:10]
y = u2[:10]

# plot u1 and u2
import matplotlib.pyplot as plt
plt.plot(u1, u2, 'o', label = 'original')
plt.show()